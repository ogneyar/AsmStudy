
; OLED SSD1306 SPI на микроконтроллере ATmega328pb

.INCLUDE "../libs/m328PBdef.inc" ; загрузка предопределений для ATmega328pb
#include "../libs/macro.inc"    ; подключение файла 'макросов'
#include "../libs/defines.inc"  ; подключение файла 'определений'

; PORT_RES = PORTB0
; PORT_DC  = PORTB1
; PORT_CS  = PORTB2

;=================================================
; Имена регистров, а также различные константы
	.equ 	F_CPU 					= 80000000		; Частота МК
		
;=================================================
	.def 	Temp0					= R19			; регистр для временных данных
	.def 	Temp1					= R20			; регистр для временных данных
 	.def 	Temp2					= R21			; регистр для временных данных
	.def 	Flag 					= R25 			; регистр для флага
;=================================================	
	.set 	_delay_ms 				= 50 			; установка переменной времени задержки 
	
;=================================================
; Сегмент SRAM памяти
.DSEG
	
;=================================================
; Сегмент EEPROM памяти
.ESEG

;=================================================
; Сегмент FLASH памяти
.CSEG

;=================================================
; Таблица прерываний
	.ORG 0x00
		RJMP	RESET

;=================================================
; Переменные во флеш памяти
Program_name: .db "SPI Master mode on ATmega328pb ",0

;=================================================
; Подключение библиотек
#include "../libs/delay.asm"    		; подключение файла 'задержек'
#include "../libs/spi.asm"    			; подключение файла библиотеки SPI
#include "../libs/ssd1306_spi.asm"    	; подключение файла библиотеки SSD1306


;=================================================
; Прерывание по сбросу, стартовая инициализация 
RESET:	
	; -- инициализация стека -- 
	LDI 	Temp1, LOW(RAMEND) ; младший байт конечного адреса ОЗУ в R16 
	OUT 	SPL, Temp1 ; установка младшего байта указателя стека 
	LDI 	Temp1, HIGH(RAMEND) ; старший байт конечного адреса ОЗУ в R16 
	OUT 	SPH, Temp1 ; установка старшего байта указателя стека 

;==============================================================
; Очистка ОЗУ и регистров R0-R31
	LDI		ZL, LOW(SRAM_START)		; Адрес начала ОЗУ в индекс
	LDI		ZH, HIGH(SRAM_START)
	CLR		R16					; Очищаем R16
RAM_Flush:
	ST 		Z+, R16				
	CPI		ZH, HIGH(RAMEND+1)	
	BRNE	RAM_Flush			
	CPI		ZL, LOW(RAMEND+1)	
	BRNE	RAM_Flush
	LDI		ZL, (0x1F-2)			; Адрес регистра R29
	CLR		ZH
Reg_Flush:
	ST		Z, ZH
	DEC		ZL
	BRNE	Reg_Flush
	CLR		ZL
	CLR		ZH
		
;==============================================================	
	; -- инициализация SPI --
	LDI 	R16, 3 ; 0 - 125KHz при Fcpu=8MHz, 1 - 500KHz при Fcpu=8MHz, 2 - 1MHz при Fcpu=8MHz, 3 - 4MHz при Fcpu=8MHz
	RCALL 	SPI_Master_Init

	; -- инициализация дисплея --
	RCALL 	SSD1306_Init

	; очистка экрана
	RCALL 	SSD1306_Clear
	
	RCALL	Delay_1000ms ; функция задержки из файла delay.inc
	
	; вывод всех пикселей на экран
	LDI 	R16, 0xff 
	RCALL 	SSD1306_Fill
	
	RCALL	Delay_1000ms ; функция задержки из файла delay.inc
	
	; очистка экрана
	RCALL 	SSD1306_Clear
	
	RCALL	Delay_1000ms ; функция задержки из файла delay.inc
	
	; вывод части пикселей на экран
	LDI 	R16, 0xaa 
	RCALL 	SSD1306_Fill
	
	; -- устанавливаем пин 3 порта D на выход -- 
	SBI 	DDRD, PORTD3

;=================================================
; Основная программа (цикл)
Main:	
	SBI		PORTD, PORTD3
	RCALL	Delay_100ms ; функция задержки из файла delay.inc
	CBI		PORTD, PORTD3
	RCALL	Delay_500ms ; функция задержки из файла delay.inc
	
	RJMP 	Main ; возврат к метке Main, повторяем все в цикле 
;================================================= 







; OLED SSD1306 SPI на микроконтроллере ATtiny2313A

#define	SPI_SCK		PB4
#define	SPI_MOSI	PB3
#define	SPI_CS		PB2
#define SPI_DC   	PB1
#define SPI_RES  	PB0

.INCLUDE "../libs/tn2313Adef.inc" ; загрузка предопределений для ATtiny2313A 
#include "../libs/macro.inc"    ; подключение файла 'макросов'
#include "../libs/defines.inc"  ; подключение файла 'определений'

;=================================================
; Имена регистров, а также различные константы
	.equ 	F_CPU 					= 8000000		; Частота МК

	.equ 	SPI_BAUD				= 100000		; 
	.equ 	SPI_DIVIDER				= 2				; 
	.equ 	SPI_UBRR				= F_CPU/SPI_DIVIDER/SPI_BAUD-1
	
;=================================================
	.def 	Data					= R16			; регистр данных
	.def 	Payload		  			= R18			; регистр данных
	.def 	Counter					= R19			; регистр счёичик
	.def 	Flag					= R20			; регистр для флага
	.def 	Null 					= R23 			; нулевой регистр 

;=================================================
; Сегмент SRAM памяти
.DSEG
	
;=================================================
; Сегмент EEPROM памяти
.ESEG

;=================================================
; Сегмент FLASH памяти
.CSEG

;=================================================
; Таблица прерываний
	.ORG 0x00
		RJMP	RESET

;=================================================
; Переменные во флеш памяти
; Program_name: .db "OLED SSD1306 SPI Master mode on ATtiny2313A",0

;=================================================
; Подключение библиотек
#include "../libs/delay.asm"    ; подключение файла 'задержек'
; #include "../libs/spi.asm"    ; подключение файла библиотеки SPI
#include "../libs/ssd1306_spi.asm"    ; подключение файла библиотеки SSD1306


;=================================================
; Прерывание по сбросу, стартовая инициализация 
RESET:	
	; -- инициализация стека -- 
	LDI 	R16, LOW(RAMEND) ; младший байт конечного адреса ОЗУ в R16 
	OUT 	SPL, R16 ; установка младшего байта указателя стека 
	; LDI 	R16, High(RAMEND) ; старший байт конечного адреса ОЗУ в R16 
	; OUT 	SPH, R16 ; установка старшего байта указателя стека 

;==============================================================
; Очистка ОЗУ и регистров R0-R31
	LDI		ZL, LOW(SRAM_START)		; Адрес начала ОЗУ в индекс
	LDI		ZH, HIGH(SRAM_START)
	CLR		R16					; Очищаем R16
RAM_Flush:
	ST 		Z+, R16			
	; CPI		ZH, HIGH(RAMEND+1)	
	; BRNE	RAM_Flush				
	CPI		ZL, LOW(RAMEND+1)	
	BRNE	RAM_Flush
	LDI		ZL, (0x1F-2)			; Адрес регистра R29
	CLR		ZH
Reg_Flush:
	ST		Z, ZH
	DEC		ZL
	BRNE	Reg_Flush
	CLR		ZL
	CLR		ZH
		
;==============================================================
	; -- инициализация дисплея --
	RCALL 	SSD1306_Init
	
	; вывод всех пикселей на экран
	RCALL 	SSD1306_Test_Screen


	; SBI DDRB, PB0 ; DDRB |= (1 << PB0);

;=================================================
; Основная программа (цикл)
Main:	
	; SBI 	PORTB, PB0 ; подача на пин PB0 высокого уровня 
	; RCALL 	Delay_1000ms ; вызываем функцию задержки по времени 
	; CBI 	PORTB, PB0 ; подача на пин PB0 низкого уровня 
	; RCALL 	Delay_1000ms ; вызываем функцию задержки по времени 	

	RJMP 	Main ; возврат к метке Main, повторяем все в цикле 
;================================================= 




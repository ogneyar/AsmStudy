
; Светодиодная мигалка на микроконтроллере ATmega328p

.CSEG ; начало сегмента кода 
.ORG 0x0000 ; начальное значение для адресации 
; -- инициализация стека -- 
LDI R16, 0xff ; младший байт конечного адреса ОЗУ в R16 
OUT 0x3d, R16 ; установка младшего байта указателя стека SPL
LDI R16, 0x08 ; старший байт конечного адреса ОЗУ в R16 
OUT 0x3e, R16 ; установка старшего байта указателя стека SPH

; Очистка ОЗУ и регистров R0-R31
LDI		R30, LOW(0x0000)		; Адрес начала ОЗУ в индекс
LDI		R31, HIGH(0x0000)
CLR		R16					; Очищаем R16
RAM_Flush:
ST 		Z+, R16				
CPI		R31, HIGH(0x0900)	
BRNE	RAM_Flush			
CPI		R30, LOW(0x0900)	
BRNE	RAM_Flush
LDI		R30, (0x1F-2)			; Адрес регистра R29
CLR		R31
Reg_Flush:
ST		Z, R31
DEC		R30
BRNE	Reg_Flush
CLR		R30
CLR		R31

	
; -- устанавливаем пин PB5 порта PORTB на выход -- 
LDI R16, 0b00100000 ; поместим в регистр R16 число 32 (0x20) 
STS 0x24, R16 ; загрузим значение из регистра R16 в порт DDRB 

;.include "../libs/nop.inc"
	
;==============================================================
; -- основной цикл программы -- 
Main: 		
	LDI 	R16, (1 << 5)
	STS 	0x25, R16 ; подача на пин PB5 высокого уровня PORTB
	CALL 	Wait ; вызываем функцию задержки по времени 
	LDI 	R16, 0
	STS 	0x25, R16 ; подача на пин PB5 низкого уровня PORTB
	CALL 	Wait ; вызываем функцию задержки по времени 

	RJMP 	Main ; возврат к метке Main, повторяем все в цикле 
;==============================================================

	
; -- подпрограмма задержки по времени -- 
Wait: 
	LDI  	R20, 0
	LDI 	R18, 0b00001111 ;
Loop_Wait_0:
	LDI 	R17, 0b11111111 ;
Loop_Wait_1:
	LDI 	R16, 0b11111111 ;
Loop_Wait_2: 
	DEC 	R16
	NOP
	CP		R16, R20
	BRNE	Loop_Wait_2

	DEC 	R17
	NOP
	CP		R17, R20
	BRNE	Loop_Wait_1

	DEC 	R18
	NOP
	CP		R18, R20
	BRNE	Loop_Wait_0

ret ; возврат из подпрограммы Wait 


